name: Standard Build

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Image to build'
        required: true

jobs:
  build-standard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: make date tag
        id: mkdatetag
        run: echo "dtag=$(date +%Y%m%d-%H%M)" >> $GITHUB_OUTPUT

      - name: Check for build-config.json in ${{ github.event.inputs.image }}
        id: check-jsonfile
        run: |
          if [ ! -f "${{ github.event.inputs.image }}/build-config.json" ]; then
            echo "No build-config.json found in ${{ github.event.inputs.image }}. Creating default build-config.json."
            mkdir -p "${{ github.event.inputs.image }}"
            echo '{' > "${{ github.event.inputs.image }}/build-config.json"
            echo '  "base_os": {' >> "${{ github.event.inputs.image }}/build-config.json"
            echo '    "base_name": "el9",' >> "${{ github.event.inputs.image }}/build-config.json" # Default base OS
            echo '    "base_version": "23"' >> "${{ github.event.inputs.image }}/build-config.json" # Default base OS version
            echo '  },' >> "${{ github.event.inputs.image }}/build-config.json"
            echo '  "base_repo": "testing"' >> "${{ github.event.inputs.image }}/build-config.json" # Default base repo
            echo '}' >> "${{ github.event.inputs.image }}/build-config.json"
          else
            echo "build-config.json exists in ${{ github.event.inputs.image }}"
          fi

      - name: Read build-config.json in ${{ github.event.inputs.image }}
        id: read-jsonfile
        run: |
          config=$(cat ${{ github.event.inputs.image }}/build-config.json)
          base_name=$(echo $config | jq -r '.base_os.base_name')
          base_version=$(echo $config | jq -r '.base_os.base_version')
          base_repo=$(echo $config | jq -r '.base_repo')
          echo "Base name: $base_name"
          echo "Base version: $base_version"
          echo "Base repo: $base_repo"
          echo "base_name=$base_name" >> $GITHUB_ENV
          echo "base_version=$base_version" >> $GITHUB_ENV
          echo "base_repo=$base_repo" >> $GITHUB_ENV

      - name: Build ${{ github.event.inputs.image }}:${{ env.base_name }}-${{ env.base_repo }}
        if: steps.check-jsonfile.conclusion == 'success'
        continue-on-error: ${{ env.base_repo == 'development' }}
        uses: opensciencegrid/build-container-action@v0.6.0
        with:
          osg_series: ${{ env.base_version }}
          osg_repo: ${{ env.base_repo }}
          context: ${{ github.event.inputs.image }}
          base_os: ${{ env.base_name }}
        env:
          BASE_NAME: ${{ env.base_name }}
          BASE_VERSION: ${{ env.base_version }}
          BASE_REPO: ${{ env.base_repo }}

      - name: Push to Harbor (${{ env.base_version }}-development)
        if: env.base_repo == 'development'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ env.base_version }}
          context: ${{ github.event.inputs.image }}
          base_os: ${{ env.base_name }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${{ env.base_version }}-testing)
        if: env.base_repo == 'testing'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ env.base_version }}
          context: ${{ github.event.inputs.image }}
          base_os: ${{ env.base_name }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${{ env.base_version }}-release)
        if: env.base_repo == 'release'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ env.base_version }}
          context: ${{ github.event.inputs.image }}
          base_os: ${{ env.base_name }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Docker Hub (${{ env.base_version }}-development)
        if: env.base_repo == 'development'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ env.base_version }}
          context: ${{ github.event.inputs.image }}
          base_os: ${{ env.base_name }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${{ env.base_version }}-testing)
        if: env.base_repo == 'testing'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ env.base_version }}
          context: ${{ github.event.inputs.image }}
          base_os: ${{ env.base_name }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${{ env.base_version }}-release)
        if: env.base_repo == 'release'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ env.base_version }}
          context: ${{ github.event.inputs.image }}
          base_os: ${{ env.base_name }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}
