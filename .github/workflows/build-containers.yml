name: Build and push container images

on:
  push:
  pull_request:
  workflow_dispatch:
  repository_dispatch:
    types: [dispatch-build]

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
      - name: make date tag
        id: mkdatetag
        run: echo "dtag=$(date +%Y%m%d-%H%M)" >> $GITHUB_OUTPUT

  build-image-list:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.image-list.outputs.json }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: image-list
        run: |
          ORG_DIR=opensciencegrid
          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]] ||
             [[ $GITHUB_EVENT_NAME == 'push' ]]; then
               if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
                   BASE=$(git merge-base origin/$GITHUB_BASE_REF HEAD)
               elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
                   BASE=${{github.event.before}}
               else
                   BASE=origin/main
               fi
               images=$(git diff --name-only \
                                 "$BASE" \
                                 "$GITHUB_SHA" |
                        egrep "^$ORG_DIR/" |
                        cut -d/ -f -2 |
                        sort |
                        uniq |
                        xargs -I {} find . -type d \
                                           -wholename ./{} \
                                           -printf "%P\n")
          else
               images=$(find $ORG_DIR -mindepth 1 \
                                      -maxdepth 1 \
                                      -type d \
                                      -printf "$ORG_DIR/%P\n")
          fi
          image_json=$(echo -n "${images:-dummy}" | jq -Rcs '.|split("\n")')
          echo "json=$image_json" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: build-image-list
    if: needs.build-image-list.outputs.images != '["dummy"]'
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.build-image-list.outputs.images) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Parse build config and set matrix
        id: set-matrix
        run: |
          CONFIG_FILE="${{ matrix.image }}/build-config.json"
          if [[ -f "$CONFIG_FILE" ]]; then
            base_os=$(jq -r '.base_os.base_name[]' $CONFIG_FILE | xargs)
            base_version=$(jq -r '.base_os.base_version[]' $CONFIG_FILE | xargs)
            base_repo=$(jq -r '.base_repo' $CONFIG_FILE)
          else
            base_os="el7 el8"
            base_version="3.6 23"
            base_repo="testing"
          fi

          # Generate matrix combinations
          matrix=$(jq -n \
            --argjson base_os "$(jq -n '$ARGS.positional' --args $base_os)" \
            --argjson base_version "$(jq -n '$ARGS.positional' --args $base_version)" \
            '[
              $base_os[] as $os |
              $base_version[] as $version |
              {base_os: $os, base_version: $version}
            ]')
          echo "matrix=${matrix}" >> $GITHUB_ENV

      - name: Build ${{ matrix.image }}:${{ env.matrix.base_version }}-${{ env.matrix.base_repo }}
        continue-on-error: false
        uses: opensciencegrid/build-container-action@v0.6.0
        with:
          osg_series: ${{ env.matrix.base_version }}
          osg_repo: ${{ env.base_repo }}
          context: ${{ matrix.image }}
          base_os: ${{ env.matrix.base_os }}

  push:
    runs-on: ubuntu-latest
    if: >-
      github.ref == 'refs/heads/main' &&
      github.event_name != 'pull_request' &&
      github.repository_owner == 'opensciencegrid' &&
      needs.build-image-list.outputs.images != '["dummy"]'
    needs: [make-date-tag, build-image-list, build]
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.build-image-list.outputs.images) }}
    steps:
      - name: Parse build config for push
        id: parse-config
        run: |
          CONFIG_FILE="${{ matrix.image }}/build-config.json"
          if [[ -f "$CONFIG_FILE" ]]; then
            base_os=$(jq -r '.base_os.base_name[]' $CONFIG_FILE | xargs)
            base_version=$(jq -r '.base_os.base_version[]' $CONFIG_FILE | xargs)
            base_repo=$(jq -r '.base_repo' $CONFIG_FILE)
          else
            base_os="el7 el8"
            base_version="3.6 23"
            base_repo="testing"
          fi
          echo "base_os=$base_os" >> $GITHUB_ENV
          echo "base_version=$base_version" >> $GITHUB_ENV
          echo "base_repo=$base_repo" >> $GITHUB_ENV

      - name: Push to Harbor (${env.base_version}-${env.base_repo})
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: ${{ env.base_repo }}
          osg_series: ${{ env.base_version }}
          context: ${{ matrix.image }}
          base_os: ${{ env.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Docker Hub (${env.base_version}-${env.base_repo})
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: ${{ env.base_repo }}
          osg_series: ${{ env.base_version }}
          context: ${{ matrix.image }}
          base_os: ${{ env.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Harbor (${{ env.base_version }}-development)
        if: ${{ env.base_version != '23' }}
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ env.base_version }}
          context: ${{ matrix.image }}
          base_os: ${{ env.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${{ env.base_version }}-testing)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ env.base_version }}
          context: ${{ matrix.image }}
          base_os: ${{ env.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${{ env.base_version }}-release)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ env.base_version }}
          context: ${{ matrix.image }}
          base_os: ${{ env.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Docker Hub (${{ env.base_version }}-development)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ env.base_version }}
          context: ${{ matrix.image }}
          base_os: ${{ env.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${{ env.base_version }}-testing)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ env.base_version }}
          context: ${{ matrix.image }}
          base_os: ${{ env.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${{ env.base_version }}-release)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ env.base_version }}
          context: ${{ matrix.image }}
          base_os: ${{ env.base_os }}
          registry_url: docker.io
          registry